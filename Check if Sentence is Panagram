class Solution {
    public boolean checkIfPangram(String sentence) {
        // int arr[]=new int[26];
        // if(sentence.length()<26){
        //     return false;
        // }
        // for(int i=0;i<sentence.length();i++){
        //   arr[sentence.charAt(i)-'a']++;
        // }
        // for(int i=0;i<26;i++){
        //     if(arr[i]<1){
        //         return false;
        //     }
        // }
        // return true;

        //Here counting is unnecessary because only want to check if 26 letters exists
        // as soon as we get 26 letters we can early exit instead of looping in long string.

        if(sentence.length()<26){
            return false;
        }
        int uniquecount=0;
        boolean[] arr=new boolean[26];
        for(char ch:sentence.toCharArray()){
            int index=ch-'a';
            if(!arr[index]){
                arr[index]=true;
                uniquecount++;
                if(uniquecount==26){
                return true;
                }
            }
        }
        return false;


//WE CAN ALSO use
//Check length: If less than 26 → return false
// Loop over 'a' to 'z':
// For each letter, check first indexOf if it exists in sentence
// If any letter is missing → return false
// If all letters found → return true

//   if (sentence.length() < 26) return false;
//         for (char ch = 'a'; ch <= 'z'; ch++) {
//             if (sentence.indexOf(ch) < 0) {
//                 return false;
//             }
//         }
//         return true;
        
        
        
    }
}
